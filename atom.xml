<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时隙茶馆</title>
  
  <subtitle>放慢脚步，歇息一下</subtitle>
  <link href="http://lem923.github.io/atom.xml" rel="self"/>
  
  <link href="http://lem923.github.io/"/>
  <updated>2021-01-25T05:59:14.254Z</updated>
  <id>http://lem923.github.io/</id>
  
  <author>
    <name>Lem He</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>油田租赁中的法律英语</title>
    <link href="http://lem923.github.io/2021/01/24/%E6%B2%B9%E7%94%B0%E7%A7%9F%E8%B5%81%E4%B8%AD%E7%9A%84%E6%B3%95%E5%BE%8B%E8%8B%B1%E8%AF%AD/"/>
    <id>http://lem923.github.io/2021/01/24/%E6%B2%B9%E7%94%B0%E7%A7%9F%E8%B5%81%E4%B8%AD%E7%9A%84%E6%B3%95%E5%BE%8B%E8%8B%B1%E8%AF%AD/</id>
    <published>2021-01-24T16:00:00.000Z</published>
    <updated>2021-01-25T05:59:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>在学习Legal Writing in Plain English的时候遇到一段涉及油田租赁合同的课文，有些专有名词头一次遇到，因此专门做下记录，以备有需要时作为基础材料。</p><h1 id="原文（精炼后）"><a href="#原文（精炼后）" class="headerlink" title="原文（精炼后）"></a>原文（精炼后）</h1><p>这一段原本是对行文逻辑的教学，试图说明在描述问题时以时间顺序进行阐述可以给读者带来更加清晰、明确的阅读体验。</p><blockquote><p>I. Introduction</p><p>The Court of Appeals held that capability of the lease to produce <strong>in paying quantities</strong> does not hold an oil and gas lease after the <strong>primary term</strong> and that actual marketing is necessary to perpetuate the lease in the <strong>secondary term</strong>. The Court of Appeals’ holding is contrary to the fundamental principle of Arkansas oil and gas law that marketing is not essential to hold a lease where there is a well capable of producing in paying quantities.</p><p>The Court of Appeals’ decision will create title uncertainty in thousands of oil and gas leases in this state. As this Court is well aware, thousands of wells across Arkansas have been shut-in or substantially curtailed from time to time. Under the Court of Appeals’ decision, it will be argued that many of these currently productive and profitable Arkansas oil and gas leases terminated years ago if there was a timeframe when gas was not taken from the lease in paying quantities for the period specified in the cessation of production clause—often as short a time as sixty days. The issues of this case already affect a dozen or more cases now being litigated in Arkansas. The Court of Appeals’ decision will encourage waste of a valuable natural resource and harm lessors and lessees by requiring continuous marketing of gas even at fire-sale prices.</p></blockquote><h1 id="疑难解析"><a href="#疑难解析" class="headerlink" title="疑难解析"></a>疑难解析</h1><p><strong>in paying quantities</strong>: 在中文中，它通常被译作“营利产量”、“超出经营费用的产量”<a href="%E5%8F%82%E8%A7%81%E9%AB%98%E9%BB%9E%E6%B3%95%E5%BE%8B%E7%B6%B2-%E5%85%83%E7%85%A7%E8%8B%B1%E7%BE%8E%E6%B3%95%E8%AF%8D%E5%85%B8%E7%9B%B8%E5%85%B3%E8%AF%8D%E6%9D%A1%EF%BC%9B%E5%8F%A6%EF%BC%8C%E6%AD%A4%E5%A4%84%E2%80%9C%E8%90%A5%E5%88%A9%E2%80%9D%E5%9C%A8%E5%A4%A7%E9%99%86%E8%AF%91%E4%BD%9C%E2%80%9C%E7%9B%88%E5%88%A9%E2%80%9D%E8%BE%83%E4%B8%BA%E5%90%88%E9%80%82%EF%BC%8C%E5%9B%A0%E4%B8%BA%E2%80%9C%E7%9B%88%E5%88%A9%E2%80%9D%E6%8C%87%E5%BC%80%E5%A7%8B%E8%B5%9A%E9%92%B1%EF%BC%8C%E8%80%8C%E2%80%9C%E8%90%A5%E5%88%A9%E2%80%9D%E6%8C%87%E4%BB%A5%E8%B5%9A%E9%92%B1%E4%B8%BA%E7%9B%AE%E7%9A%84%EF%BC%8C%E8%8B%A5%E9%87%87%E5%90%8E%E8%80%85%EF%BC%8C%E5%88%99%E6%89%80%E6%9C%89%E4%BA%A7%E9%87%8F%E9%83%BD%E5%8F%AF%E4%BB%A5%E7%A7%B0%E4%BD%9C%E8%90%A5%E5%88%A9%E4%BA%A7%E9%87%8F%E3%80%82">^1</a>或“足够支付（租金）的产量”。本文采取中间这种译法，因为笔者找到了Ottinger[^2]的一篇文章，其中引用Knight v. Blackwell Oil &amp; Gas Co.[^3]中法院对paying quantities的定义，指出：</p><blockquote><p>The words ‘in paying quantities’ can mean the production of oil or gas in such a quantity as will pay a small profit over operation costs of the well, although the expense of drilling and equipping the well may never be paid, and thus, the operation as a whole might result in a loss to the lessee. Under such circumstances, the well might be operated by the lessee, in order to recoup some of the drilling and equipment costs.<br>“超出经营费用的产量”可用于表示石油或天然气产量对应的价值略超过油井的运营成本，即便这一价值可能完全不足以抵消油井开采和相关设备的费用；正是因此，整体来说，这种运营可能会导致承租人亏损。在这种情况下，可以由承租人经营油井，从而收回部分开采和设备成本。</p></blockquote><p>不过，也不是达到<em>paying quantities</em>就一定能继续合同；美国各州对此存在不同要求。例如，路易斯安那州最高法院就指出，仅仅是满足超出经营费用的产量并不足以让租赁合同在“一期”届满后得到完全履行、完全生效[^2]。</p><p><strong>primary term and secondary term</strong>:这是油田租赁合同的特殊之处，分为两期[^4]。“一期”（primary term）一般是在合同签订时就约定的固定期限，如3年；“二期”（secondary term）在“一期”届满后生效，一般以前面所说的达到超出经营费用的产量为前置条件。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[^2]: Ottinger, Patrick S. “Production in ‘Paying Quantities’ - A Fresh Look” 65 (2005): 43.</p><p>[^3]: 197 La. 237, 243, 1So. 2d 89, 91 (1941)</p><p>[^4]: Holliday, Benjamin B. “Production in Paying Quantities in Texas,” n.d., 52.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在学习Legal Writing in Plain English的时候遇到一段涉及油田租赁合同的课文，有些专有名词头一次遇到，因此专门做下记录，以备有需要时作为基础材料。&lt;/p&gt;
&lt;h1 id=&quot;原文（精炼后）&quot;&gt;&lt;a href=&quot;#原文（精炼后）&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="学习" scheme="http://lem923.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="法律英语" scheme="http://lem923.github.io/tags/%E6%B3%95%E5%BE%8B%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Hexo五分钟部署Github Action</title>
    <link href="http://lem923.github.io/2021/01/22/Github_Actions/"/>
    <id>http://lem923.github.io/2021/01/22/Github_Actions/</id>
    <published>2021-01-22T16:00:00.000Z</published>
    <updated>2021-01-25T05:59:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>Github Action是Github提供的一种自动化服务，可以在触发一定条件时，自动执行此前设计好的脚本，从而自动完成一些重复性工作，最大程度地节省人力。就Hexo而言，如果只需要将写好的文章放进Github Repo的Sources文件夹，后面的一系列Hexo clean, Hexo generate, Hexo deploy操作都不再需要自己手动完成，是不是很香呢？</p><a id="more"></a><p>网络上其实有不少Github Actions自动部署Hexo的教程，但往往需要配置ssh密钥，以及自己修改一些内容，对于更广泛的受众、尤其是零基础的受众来说多少有些令人望而却步。事实上，Hexo自己就提供了<a href="https://hexo.io/docs/github-pages.html">一套简单易行的方案</a>，可以通过Github Action自动部署网站。</p><p>这一网页有提供<a href="https://hexo.io/zh-cn/docs/github-pages">中文版</a>，但可惜的是，中文版长期没有更新，仍在使用过去的Travis CI，不如Github Action简易。因此，本文将结合Hexo最新的教程，介绍如何三步就简单第部署Github Action。</p><p>注：本文默认已安装Hexo并已通过Github Pages发布；否则，你可能并不需要Github Action。基于这一前提，现在你的电脑应已设置好git和git ssh所需密钥，下文将不再赘述。</p><h2 id="第一步（针对部分人的前期准备）——将Hexo上传至user-github-io的非main分支"><a href="#第一步（针对部分人的前期准备）——将Hexo上传至user-github-io的非main分支" class="headerlink" title="第一步（针对部分人的前期准备）——将Hexo上传至user.github.io的非main分支"></a>第一步（针对部分人的前期准备）——将Hexo上传至user.github.io的非main分支</h2><p>这一步只针对使用user.github.io作为Hexo博客repo的人群。由于Github的限制，使用这一域名的网站，内容必须储存在Main分支；同时，Hexo和网站内容（最好）不要放在同一个分支，因此，需要将Hexo上传至新的分支。</p><p>也就是说——</p><ul><li>如果你使用普通repo创建网站，网站放置于gh-pages分支，可忽略该步；</li><li>如果你已经将Hexo全部上传至user.github.io的main分支，可以选择清空main分支或仅保留public/下的内容；</li><li>如果你只采用deploy方式将博客发布至user.github.io的main分支，可直接进行下述操作。</li></ul><p><strong>（1）</strong>选择喜欢的位置建立Hexo目录，作为本地仓库目录</p><p><strong>（2）</strong>打开终端，通过cd命令移动到该仓库目录</p><p><strong>（3）</strong>输入以下内容将本地仓库与远程仓库连接([username][repo name]需要根据自己情况替换，不保留中括号)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git add README.md</span><br><span class="line">$ git commit -m &quot;a&quot;</span><br><span class="line">$ git remote add origin git@github.com:[username]&#x2F;[username].github.io.git</span><br><span class="line"># 如你在其他repo建立网站，可套用下面这一行</span><br><span class="line">$ git remote add origin git@github.com:[username]&#x2F;[repo name].git</span><br></pre></td></tr></table></figure><p><strong>（4）</strong>继续输入以下命令，先完成首次上传，再建立Hexo分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin main</span><br><span class="line">$ git checkout -b Hexo</span><br></pre></td></tr></table></figure><p><strong>（5）</strong>将Hexo博客主目录<strong>除public/外</strong>的所有文件复制到你建立的本地仓库目录，再输入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;a&quot;</span><br><span class="line">$ git push origin Hexo</span><br></pre></td></tr></table></figure><p>至此，准备工作已经完成，接下来将在Github网页端完成操作。</p><h2 id="第二步——建立Github-Action"><a href="#第二步——建立Github-Action" class="headerlink" title="第二步——建立Github Action"></a>第二步——建立Github Action</h2><p><strong>（1）</strong>在自己Hexo相关Repo的主页（Codes），先将Branch（分支）调整到刚才上传的<strong>Hexo</strong></p><p><strong>（2）</strong>查看该分支的<strong>Package.json</strong>文件，看其中<strong>scripts</strong>项下是否包括”build”: “hexo generate”</p><p><strong>（3）</strong>如果没有，按以下格式添加并保存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;build&quot;: &quot;hexo generate&quot;</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><strong>（4）</strong>在Repo的菜单栏中选择Actions，进一步选择自己设置工作流，将文件命名为<strong>Pages.yml</strong>，并将以下内容复制进该文件（<strong>注意核对目录是否为.github/workflows/pages.yml，一般来说这是默认设置</strong>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">name: Pages</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - Hexo  # 或你自己命名的Hexo储存分支</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  pages:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">      - uses: actions&#x2F;checkout@v2</span><br><span class="line">      - name: Use Node.js 12.x</span><br><span class="line">        uses: actions&#x2F;setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: &#39;12.x&#39;</span><br><span class="line">      - name: Cache NPM dependencies</span><br><span class="line">        uses: actions&#x2F;cache@v2</span><br><span class="line">        with:</span><br><span class="line">          path: node_modules</span><br><span class="line">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class="line">          restore-keys: |</span><br><span class="line">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class="line">      - name: Install Dependencies</span><br><span class="line">        run: npm install</span><br><span class="line">      - name: Build</span><br><span class="line">        run: npm run build</span><br><span class="line">      - name: Deploy</span><br><span class="line">        uses: peaceiris&#x2F;actions-gh-pages@v3</span><br><span class="line">        with:</span><br><span class="line">          github_token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class="line">          publish_dir: .&#x2F;public</span><br><span class="line">          publish_branch: main  # deploying branch</span><br></pre></td></tr></table></figure><p><strong>（5）</strong>点击Commit，完成Github Action的创建</p><h2 id="第三步——检验是否成功实现自动部署"><a href="#第三步——检验是否成功实现自动部署" class="headerlink" title="第三步——检验是否成功实现自动部署"></a>第三步——检验是否成功实现自动部署</h2><p>其实自动部署的设置在第二步就可以宣告完成；在完成创建后，由于已经对Hexo分支做出改变，满足了这一Github Action的启动条件，事实上现在它已经开始工作了。</p><p>此时，可以在Action页面查看进度，如果中间出现任何问题，也可以在该页面查看具体是哪一步出现了错误，便于纠错。如果对这个Action有信心，也可以直接到Repo的main分支查看是否完成网站的发布。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>折腾这种事，果然只有0次和无数次。当初在搞Word Press的时候，就花了好几天整理插件、CSS样式、主题等等；到了Hexo，好在没什么太多东西可折腾（相比于Word Press），但就这我也折腾了半天主题和页面的设置以及Github Action。现在终于大功告成，总算能按捺住（或者说被迫按捺住）蠢蠢欲动的心，把心思都放在学习和写作上了。这或许就是Hexo被大家推崇的原因之一吧？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Github Action是Github提供的一种自动化服务，可以在触发一定条件时，自动执行此前设计好的脚本，从而自动完成一些重复性工作，最大程度地节省人力。就Hexo而言，如果只需要将写好的文章放进Github Repo的Sources文件夹，后面的一系列Hexo clean, Hexo generate, Hexo deploy操作都不再需要自己手动完成，是不是很香呢？&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="http://lem923.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="随笔" scheme="http://lem923.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>某种意义上的「第一篇」</title>
    <link href="http://lem923.github.io/2021/01/20/First%20Commit/"/>
    <id>http://lem923.github.io/2021/01/20/First%20Commit/</id>
    <published>2021-01-20T16:00:00.000Z</published>
    <updated>2021-01-25T05:59:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>这当然早已不是我写的、真正意义上的第一篇博客，但仍可以算是某种意义上的「第一篇」。一方面，这至少是在Hexo上的「第一篇」（除去Hello World这种带有纪念意义的自动生成文章）；另一方面，这也是我留存下来的「第一篇」文章。</p><a id="more"></a><p>什么是「留存下来」的第一篇？这主要是因为，我的Onedrive不知道经历了什么变故，不少常用文件夹中的Word、MD、PDF文档乃至JPG、PNG等各类格式的图片都无法打开，不是显示「文件类型无效」就是「文件已经损坏」。而此前的那些博客存档……也都保存在其中。也就是说，备份件已经彻底灭失。</p><p>在发现这一情况后，我赶紧去自己的博客准备挨个把文章复制下来，然而祸不单行的是，服务器解析又出了问题。如果说倒霉有止境的话，那止境大概永远都是「更」倒霉——ssh登陆服务器的密钥……也在毁损的文件之列。这真是足以让人抓狂的情况，由于几年来Onedrive都没出过一点差错，我早已将大部分重要文件都存在上面，本地的备份也逐渐懈怠（主要是没有太多需要如此完备备份的文件），结果一出问题就是大问题。</p><p>在网上检索，发现很可能和这位老哥是一个情况：<a href="https://v2ex.com/t/651585">OneDrive 文件损坏，你们有遇到过吗？</a>，因为我损坏的文件刚好都在Mac、Win双端同时开启了同步的文件夹内，而且两者肯定存在同时同步统一文件的情况。但这老哥比我幸运，起码他进去服务器了……</p><p>当然，到底是不是Mac和Win同时同步的原因，实际上并不能确定；在谷歌上使用英文关键词搜索也基本找不到有其他案例，可见即便这就是原因，也是极小概率事件，碰上算我倒霉。于是，最终我还是在Mac上退出了Onedrive同步，毕竟小心无大错，再有文件损毁可就真的没地方哭了。服务器也通过面板重装了系统，可是看着几个月前备份在Onedrive的博客数据库备份，我不禁陷入沉思——这东西又有没有损毁呢……</p><p>最终我也没有去管那个状态未知的数据库了，与其重做一个Word Press网站，不如趁机投奔更简易、更轻量化的Hexo博客，最关键的是它可以通过Github搞备份，再怎么也不会出现文件损坏的错误——最多Github宕机个几分钟几小时。而且，这整套流程都是免费的，真香。</p><p>这也就是这篇文章的由来，既是对网站「搬迁」的一次记录，也是对新的开始的期待。这次事件也让我长了个教训——真正重要的东西，还是要坚持狡兔三窟，不能掉以轻心；这种故障在整体上是极小概率事件，但真发生在自己身上也不是闹着玩的；这次只是丢了一些短文和略有纪念意义的文件，下次呢？</p><p>P.S. 说到备份突然想起来，MWeb的作者可真是太给力了。这软件在设置里直接可以选择3个自动备份的文件夹，哪怕用不上那么多，也着实增添了不少安全感。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这当然早已不是我写的、真正意义上的第一篇博客，但仍可以算是某种意义上的「第一篇」。一方面，这至少是在Hexo上的「第一篇」（除去Hello World这种带有纪念意义的自动生成文章）；另一方面，这也是我留存下来的「第一篇」文章。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://lem923.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="随笔" scheme="http://lem923.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lem923.github.io/2021/01/19/hello-world/"/>
    <id>http://lem923.github.io/2021/01/19/hello-world/</id>
    <published>2021-01-19T16:00:00.000Z</published>
    <updated>2021-01-25T05:59:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a><br>tez</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="http://lem923.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
